{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "maniinstance"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"storageaccount_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'storageaccount'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0509-051254-uwx1ogu3"
		},
		"storageaccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://karamdosa.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8651814755797389.9.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storageaccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('storageaccount_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('storageaccount_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_fullload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "src_container",
						"type": "varchar"
					},
					{
						"name": "src_folder",
						"type": "varchar"
					},
					{
						"name": "src_filename",
						"type": "varchar"
					},
					{
						"name": "destination_container",
						"type": "varchar"
					},
					{
						"name": "destination_folder",
						"type": "varchar"
					},
					{
						"name": "destination_filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "full_load"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source_container",
						"type": "varchar"
					},
					{
						"name": "source_folder",
						"type": "varchar"
					},
					{
						"name": "source_filename",
						"type": "varchar"
					},
					{
						"name": "destination_container",
						"type": "varchar"
					},
					{
						"name": "destination_folder",
						"type": "varchar"
					},
					{
						"name": "destination_filename",
						"type": "varchar"
					},
					{
						"name": "water_mark",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "incremental"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_incremental_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source_container",
						"type": "varchar"
					},
					{
						"name": "source_folder",
						"type": "varchar"
					},
					{
						"name": "source_filename",
						"type": "varchar"
					},
					{
						"name": "destination_container",
						"type": "varchar"
					},
					{
						"name": "destination_folder",
						"type": "varchar"
					},
					{
						"name": "destination_filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "incremental_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_stg_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "stage_container",
						"type": "varchar"
					},
					{
						"name": "stage_folder",
						"type": "varchar"
					},
					{
						"name": "stage_filename",
						"type": "varchar"
					},
					{
						"name": "destination_container",
						"type": "varchar"
					},
					{
						"name": "destination_folder",
						"type": "varchar"
					},
					{
						"name": "destination_filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "stage_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_ds_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folders": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folders",
							"type": "Expression"
						},
						"fileSystem": "stagging"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emp_dim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emp_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "employee_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "date"
					},
					{
						"name": "mobile",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "address_street",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "last_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ef_start__date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ef_end_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "kd",
					"table": "employees_d"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sccd_src_emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"folderPath": "Full_Load",
						"fileSystem": "src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "mobile",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "address_street",
						"type": "String"
					},
					{
						"name": "address_city",
						"type": "String"
					},
					{
						"name": "entry_date",
						"type": "String"
					},
					{
						"name": "store_store_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"srccontainer": {
						"type": "string"
					},
					"srcfolder": {
						"type": "string"
					},
					"srcfilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().srcfilename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().srcfolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().srccontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"destinationcontainer": {
						"type": "string"
					},
					"destinationfolder": {
						"type": "string"
					},
					"destinationfile": {
						"type": "string"
					}
				},
				"folder": {
					"name": "target_ds"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().destinationfile",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().destinationfolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().destinationcontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_raw_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_ds"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"folderPath": "employees/2023-05-14",
						"fileSystem": "stagging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "mobile",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "address_street",
						"type": "String"
					},
					{
						"name": "address_city",
						"type": "String"
					},
					{
						"name": "entry_date",
						"type": "String"
					},
					{
						"name": "store_store_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_raw_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "target_ds"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employees.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_load_all')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookupforconfigfull_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from config.full_load;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "config_fullload",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookupforconfigfull_load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookupforconfigfull_load').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_files",
											"type": "DatasetReference",
											"parameters": {
												"srccontainer": {
													"value": "@item().src_container",
													"type": "Expression"
												},
												"srcfolder": {
													"value": "@item().src_folder",
													"type": "Expression"
												},
												"srcfilename": {
													"value": "@item().src_filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "src_target",
											"type": "DatasetReference",
											"parameters": {
												"destinationcontainer": {
													"value": "@item().destination_container",
													"type": "Expression"
												},
												"destinationfolder": {
													"value": "@concat(item().destination_folder,'/', utcNow('yyyy-MM-dd'))",
													"type": "Expression"
												},
												"destinationfile": {
													"value": "@item().destination_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Logs_on_success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Success",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().src_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Logs_on_failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Failure",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().src_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Full_Load_src_stg"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-14T13:05:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_fullload')]",
				"[concat(variables('factoryId'), '/datasets/src_files')]",
				"[concat(variables('factoryId'), '/datasets/src_target')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_load_all_stg_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from config.stage_raw;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "config_stg_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_files",
											"type": "DatasetReference",
											"parameters": {
												"srccontainer": {
													"value": "@item().stage_container",
													"type": "Expression"
												},
												"srcfolder": {
													"value": "@item().stage_folder",
													"type": "Expression"
												},
												"srcfilename": {
													"value": "@item().stage_filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "src_target",
											"type": "DatasetReference",
											"parameters": {
												"destinationcontainer": {
													"value": "@item().destination_container",
													"type": "Expression"
												},
												"destinationfolder": {
													"value": "@concat(item().destination_folder,'/', utcNow('yyyy-MM-dd'))",
													"type": "Expression"
												},
												"destinationfile": {
													"value": "@item().destination_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Logs_on_success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Success",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().stage_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Logs_on_failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Failure",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().stage_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "delete_ds_stg",
											"type": "DatasetReference",
											"parameters": {
												"folders": {
													"value": "@item().stage_folder",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "storageaccount",
												"type": "LinkedServiceReference"
											},
											"path": "logging"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Full_Load_stg_raw"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T05:37:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_stg_raw')]",
				"[concat(variables('factoryId'), '/datasets/src_files')]",
				"[concat(variables('factoryId'), '/datasets/src_target')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/delete_ds_stg')]",
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/increment_all_src_stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [config].[incremental];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "config_incremental",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@startOfDay(utcNow())",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_files",
											"type": "DatasetReference",
											"parameters": {
												"srccontainer": {
													"value": "@item().source_container",
													"type": "Expression"
												},
												"srcfolder": {
													"value": "@item().source_folder",
													"type": "Expression"
												},
												"srcfilename": {
													"value": "@item().source_filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "src_target",
											"type": "DatasetReference",
											"parameters": {
												"destinationcontainer": {
													"value": "@item().destination_container",
													"type": "Expression"
												},
												"destinationfolder": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"destinationfile": {
													"value": "@item().destination_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Logs_on_success_copy",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Success",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().source_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Logs_on_failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Failure",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().source_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "incremental_src_stage"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T05:37:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_incremental')]",
				"[concat(variables('factoryId'), '/datasets/src_files')]",
				"[concat(variables('factoryId'), '/datasets/src_target')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_all_stg_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [config].[incremental_raw];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "config_incremental_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_files",
											"type": "DatasetReference",
											"parameters": {
												"srccontainer": {
													"value": "@item().source_container",
													"type": "Expression"
												},
												"srcfolder": {
													"value": "@item().source_folder",
													"type": "Expression"
												},
												"srcfilename": {
													"value": "@item().source_filename",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "src_target",
											"type": "DatasetReference",
											"parameters": {
												"destinationcontainer": {
													"value": "@item().destination_container",
													"type": "Expression"
												},
												"destinationfolder": {
													"value": "@concat(item().destination_folder, '/', utcNow('yyyy-MM-dd'))",
													"type": "Expression"
												},
												"destinationfile": {
													"value": "@item().destination_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Logs_on_success_copy",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Success",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().source_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Logs_on_failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails3]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExeStatus": {
												"value": "Failure",
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceTable": {
												"value": {
													"value": "@item().source_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "delete_ds_stg",
											"type": "DatasetReference",
											"parameters": {
												"folders": {
													"value": "@item().source_folder",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "storageaccount",
												"type": "LinkedServiceReference"
											},
											"path": "logging"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "incremental_stage_raw"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T05:37:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_incremental_raw')]",
				"[concat(variables('factoryId'), '/datasets/src_files')]",
				"[concat(variables('factoryId'), '/datasets/src_target')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/delete_ds_stg')]",
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "stg_raw_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stg_raw_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Execute_full_load"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T05:37:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stg_raw_src')]",
				"[concat(variables('factoryId'), '/datasets/stg_raw_target')]"
			]
		}
	]
}